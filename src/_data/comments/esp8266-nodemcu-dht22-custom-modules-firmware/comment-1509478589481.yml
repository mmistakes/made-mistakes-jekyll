_id: 0b06eb17-6ba8-4cc8-a8ef-b2f9faae580e
_parent: /projects/esp8266-nodemcu-dht22-custom-modules-firmware/
message: ""I generate custom firmware for Nodemcu from the site you mentioned but I have a problem.  \nWith custom firmware I couldn't blink a led. :) but with official firmware, led blink code works well.  \nHere you can find the error output from esplorer.\n\nWith 9600 baud rate  \n---------------------------  \nCommunication with MCU...  \nGot answer! AutoDetect firmware...  \nCommunication with MCU established.  \nCan't autodetect firmware, because proper answer not received (may be unknown firmware).  \nPlease, reset module or continue.  \nÊ$NX¸,dCYø4xCÀdà file.remove(\"init.lua\");  \nstdin:1: attempt to index global 'file' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkfile.open(\"init.lua\",\"w+\");  \nstdin:1: attempt to index global 'file' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw = file.writeline  \nstdin:1: attempt to index global 'file' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[-- Blink using timer alarm --]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[timerId = 0]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[dly = 1000]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[-- use D4]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[ledPin = 4]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[-- set mode to output]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[gpio.mode(ledPin,gpio.OUTPUT)]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[ledState = 0]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[-- timer loop]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[tmr.alarm( timerId, dly, 1, function()]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[  ledState = 1 - ledState;]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[  -- write state to D4]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[  gpio.write(ledPin, ledState)]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkw([==[end) ]==]);  \nstdin:1: attempt to call global 'w' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkfile.close();  \nstdin:1: attempt to index global 'file' (a nil value)  \nstack traceback:  \n\tstdin:1: in main chunkdofile(\"init.lua\");  \ncannot open init.lua  \nstack traceback:  \n\t[C]: in function 'dofile'  \n\tstdin:1: in main chunk""
name: ender
email: 1c3294f734151824bc04cc277a7b9bd5
url: ''
replying_to: ''
hidden: ''
date: '2016-07-29T08:48:55.000Z'